# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: ListNode) -> bool:
        if head is None:
            return False
        
        if head.next == None:
            return False
            
        fast = head.next
        slow = head
        
        while( fast != slow ):
            if ((fast.next == None) or (slow.next == None) or (fast.next.next == None)):
                return False
            fast = fast.next.next
            slow = slow.next
            if slow == None:
                return False
        return True
